;; -*- mode: emacs-lisp; coding: emacs-mule; -*-
;; --------------------------------------------------------------------------
;; Desktop File for Emacs
;; --------------------------------------------------------------------------
;; Created Wed Sep  2 15:27:41 2015
;; Desktop file format version 206
;; Emacs version 24.4.1

;; Global section:
(setq desktop-saved-frameset [frameset 1 (21990 42221 670262 929000) (desktop . "206") "root@yao.yao.com" nil nil ((((font-backend xft x) (font . "-unknown-Monaco-normal-normal-normal-*-17-*-*-*-m-0-iso10646-1") (font-parameter . "Monaco-13") (border-width . 0) (internal-border-width . 0) (right-divider-width . 0) (bottom-divider-width . 0) (vertical-scroll-bars) (foreground-color . "#DCDCCC") (background-color . "#3F3F3F") (mouse-color . "black") (border-color . "black") (screen-gamma) (line-spacing) (left-fringe . 10) (right-fringe . 10) (scroll-bar-foreground) (scroll-bar-background . "grey75") (menu-bar-lines . 1) (tool-bar-lines . 0) (title) (wait-for-wm . t) (fullscreen . fullboth) (tool-bar-position . top) (icon-type . t) (auto-raise) (auto-lower) (cursor-type . box) (scroll-bar-width . 0) (alpha) (client . "Unprintable entity") (environment "DISPLAY=:0.0" "GPG_AGENT_INFO=/tmp/gpg-PXIjW4/S.gpg-agent:1159:1" "SESSION_MANAGER=local/yao:@/tmp/.ICE-unix/1142,unix/yao:/tmp/.ICE-unix/1142" "XDG_CONFIG_DIRS=/etc/xdg" "CLUTTER_IM_MODULE=xim" "XDG_DATA_DIRS=/usr/share/xfce4:/usr/local/share/:/usr/share/:/usr/share" "PWD=/root" "QT_IM_MODULE=fcitx" "XDG_VTNR=7" "TEXTDOMAINDIR=/usr/share/locale/" "GDMSESSION=lightdm-xsession" "SHELL=/bin/bash" "GLADE_CATALOG_PATH=:" "SSH_AUTH_SOCK=/tmp/ssh-gWcuNvacFJBJ/agent.1050" "XDG_GREETER_DATA_DIR=/var/lib/lightdm/data/root" "XMODIFIERS=@im=fcitx" "XAUTHORITY=/root/.Xauthority" "XDG_CURRENT_DESKTOP=XFCE" "LANG=zh_CN.utf8" "XDG_MENU_PREFIX=xfce-" "XDG_RUNTIME_DIR=/run/user/0" "XDG_SESSION_PATH=/org/freedesktop/DisplayManager/Session0" "GLADE_PIXMAP_PATH=:" "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin" "XDG_SESSION_ID=1" "GTK_IM_MODULE=fcitx" "LOGNAME=root" "GLADE_MODULE_PATH=:" "DBUS_SESSION_BUS_ADDRESS=unix:abstract=/tmp/dbus-Uyjg4Gkctn,guid=9603e2c40dc85bf3a0d1bf7855e6a450" "XDG_SEAT_PATH=/org/freedesktop/DisplayManager/Seat0" "DESKTOP_SESSION=lightdm-xsession" "QT4_IM_MODULE=fcitx" "HOME=/root" "SSH_AGENT_PID=1101" "TEXTDOMAIN=im-config" "XDG_SEAT=seat0" "LANGUAGE=zh_CN:zh" "USER=root") (display-type . color) (background-mode . dark) (cursor-color . "#FFFFEF") (sticky) (frameset--id . "3135-26EB-973A-16BB") (frameset--mini t . t) (height . 35) (width . 134) (modeline . t) (minibuffer . t) (unsplittable) (left . 0) (top . 0) (icon-name) (visibility . t) (display . ":0.0") (explicit-name)) ((min-height . 4) (min-width . 10) (min-height-ignore . 4) (min-width-ignore . 4) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 84) (min-pixel-width . 100) (min-pixel-height-ignore . 84) (min-pixel-width-ignore . 40) (min-pixel-height-safe . 21) (min-pixel-width-safe . 20)) leaf (pixel-width . 1366) (pixel-height . 722) (total-width . 136) (total-height . 34) (normal-height . 1.0) (normal-width . 1.0) (buffer "init.el" (selected . t) (hscroll . 0) (fringes 10 10 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 845) (start . 1))) (((tool-bar-lines . 1) (vertical-scroll-bars) (foreground-color . "#DCDCCC") (background-color . "#3F3F3F") (display-type . mono) (background-mode . dark) (cursor-color . "#FFFFEF") (font . "tty") (height . 10) (width . 10) (modeline . t) (unsplittable) (menu-bar-lines . 1) (frameset--id . "E155-560A-EAF7-1008") (frameset--mini t) (minibuffer . t)) ((min-height . 4) (min-width . 10) (min-height-ignore . 3) (min-width-ignore . 2) (min-height-safe . 1) (min-width-safe . 2) (min-pixel-height . 84) (min-pixel-width . 100) (min-pixel-height-ignore . 3) (min-pixel-width-ignore . 2) (min-pixel-height-safe . 1) (min-pixel-width-safe . 2)) leaf (pixel-width . 10) (pixel-height . 8) (total-width . 10) (total-height . 8) (normal-height . 1.0) (normal-width . 1.0) (buffer "lisp.org" (selected) (hscroll . 0) (fringes 0 0 nil) (margins nil) (scroll-bars 0 0 t nil) (vscroll . 0) (dedicated) (point . 58046) (start . 1))))])
(setq desktop-missing-file-warning nil)
(setq tags-file-name nil)
(setq tags-table-list nil)
(setq search-ring '("buy1" "buy" "12" "meiyue" "plus" "totime" "to-time" "buling" "totime" "jz1" "spy" "label" "price" "time" "hover" "plot"))
(setq regexp-search-ring '("insert.*wd_wen" "insert.*gz_user " "num" "on line" "sea\\W" "sea[]" "msh_src" " s(" "su" "mysql_insert_id" "sphin" "sph" "suo"))
(setq register-alist '((48 . "\n;; (defn buy1\n;;   [qian jz]\n;;   (/ (/ 1000 1.006) jz)\n;;   )\n")))
(setq file-name-history '("/doc/z" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "~/dl/3436219.txt" "/doc/lisp.org" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/z" "~/dl/3436219.txt" "/doc/lisp.org" "/root/dl/3436219.txt" "/root/dl/3422515.txt" "/root/dl/3506478.txt" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/doc/z" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/lisp.org" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/doc/z" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/lisp.org" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/doc/z" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/lisp.org" "/doc/tip.org" "/doc/php.org" "/doc/todo.org" "~/.emacs.d/set/misc-config.el" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/srv/rickshaw-master.zip" "/srv/flot-master.zip" "/home/jj/project.clj" "/home/zzzzz" "/doc/z" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/lisp.org" "/srv/jj.html" "/home/srv/flot-master/examples/interacting/index.html" "/home/zzzzz" "/home/jj/zzzzz" "/home/zzzzz" "/srv/flot-master/examples/axes-multiple/index.html" "/srv/flot-master.zip" "/srv/rickshaw-master/examples/lines.html" "/srv/rickshaw-master.zip" "/etc/hosts" "/srv/z.html" "/srv/.z.html.swp" "/etc/nginx/sites-enabled/default" "/etc/nginx/nginx.conf" "/doc/php.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3506478.txt" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/home/jj/src/jj/math.clj" "/home/jj/project.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/tip.org" "/doc/lisp.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3506478.txt" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/home/jj/src/jj/math.clj" "/home/jj/project.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/doc/php.org" "/doc/tip.org" "/doc/lisp.org" "/home/jj/src/jj/core.clj" "/doc/php.org" "/doc/tip.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/dl/3506478.txt" "~/dl/3422515.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/home/jj/src/jj/math.clj" "/home/jj/src/jj/date.clj" "/home/jj/project.clj" "/home/jj/src/jj/core.clj" "/doc/lisp.org" "/home/fx/project.clj" "/home/jj/src/jj/date.clj" "/home/jj/src/jj/core.clj" "/home/fx/src/log/date.clj" "/home/fx/src/log/fx.clj" "/home/jj/src/jj/math.clj" "/home/fx/src/log/math.clj" "/home/fx/src/log/misc.clj" "/home/jj/src/jj/core.clj" "/root/dl/3422515.txt" "/root/dl/3506478.txt" "/doc/php.org" "/doc/tip.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "/home/jj/project.clj" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/.lein/profiles.clj" "~/dl/3506478.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/doc/lisp.org" "/doc/tip.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "/home/jj/project.clj" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el" "~/.emacs.d/set/org-sou.el" "~/.emacs.d/set/php-config.el" "~/.emacs.d/set/prj-config.el" "~/.emacs.d/set/tabbar-config.el" "~/.emacs.d/init.el" "~/.emacs.d/set/el-get-config.el" "~/.bashrc" "~/.lein/profiles.clj" "/doc/php.org" "~/dl/3506478.txt" "~/.emacs.d/my/cmd.el" "~/.emacs.d/set/cloj-config.el" "/doc/lisp.org" "/doc/todo.org" "/etc/apt/sources.list" "~/.emacs.d/set/misc-config.el" "/doc/z" "/home/jj/project.clj" "~/.emacs.d/set/mode-line-config.el" "~/.emacs.d/set/org-config.el"))

;; Buffer section -- buffers listed in same order as in buffer list:
(desktop-create-buffer 206
  "/root/.emacs.d/init.el"
  "init.el"
  'emacs-lisp-mode
  '(abbrev-mode projectile-mode flx-ido-mode hs-minor-mode company-mode)
  845
  '(4781 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/el-get-config.el"
  "el-get-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  1865
  '(924 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/root/.emacs.d/my/cmd.el"
  "cmd.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  9355
  '(18793 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/doc/lisp.org"
  "lisp.org"
  'org-mode
  '(auto-fill-mode abbrev-mode projectile-mode flx-ido-mode company-mode)
  58046
  '(58046 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/jj/src/jj/core.clj"
  "core.clj"
  'clojure-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode cider-mode)
  278
  '(298 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/jj/src/jj/date.clj"
  "date.clj"
  'clojure-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode cider-mode)
  3032
  '(106 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/jj/src/jj/math.clj"
  "math.clj"
  'clojure-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode cider-mode)
  1
  '(1 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/home/zzzzz"
  "zzzzz"
  'text-mode
  '(auto-fill-mode projectile-mode flx-ido-mode)
  1
  '(37273 nil)
  nil
  nil
  nil)

(desktop-create-buffer 206
  "/home/jj/project.clj"
  "project.clj"
  'clojure-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode cider-mode)
  542
  '(502 nil)
  nil
  nil
  '((indent-tabs-mode) (buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/srv/flot-master.zip"
  "flot-master.zip"
  'archive-mode
  '(projectile-mode flx-ido-mode)
  203
  '(nil nil)
  t
  nil
  '((buffer-file-coding-system . no-conversion-multibyte)))

(desktop-create-buffer 206
  "/srv/rickshaw-master.zip"
  "rickshaw-master.zip"
  'archive-mode
  '(projectile-mode flx-ido-mode)
  214
  '(nil nil)
  t
  nil
  '((buffer-file-coding-system . no-conversion-multibyte)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/cloj-config.el"
  "cloj-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  887
  '(938 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/root/.bashrc"
  ".bashrc"
  'sh-mode
  '(projectile-mode flx-ido-mode hs-minor-mode)
  343
  '(356 nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix) (overwrite-mode)))

(desktop-create-buffer 206
  nil
  "my"
  'dired-mode
  '(projectile-mode flx-ido-mode company-mode)
  167
  '(nil nil)
  t
  '("/root/.emacs.d/my/")
  '((truncate-lines . t)))

(desktop-create-buffer 206
  nil
  "set"
  'dired-mode
  '(projectile-mode flx-ido-mode company-mode)
  1
  '(nil nil)
  t
  '("/root/.emacs.d/set/")
  '((truncate-lines . t)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/tabbar-config.el"
  "tabbar-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  2851
  '(2787 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/prj-config.el"
  "prj-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  1
  '(405 nil)
  nil
  nil
  '((buffer-file-coding-system . prefer-utf-8-unix)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/php-config.el"
  "php-config.el"
  'emacs-lisp-mode
  '(abbrev-mode projectile-mode flx-ido-mode hs-minor-mode company-mode)
  1
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . undecided-unix)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/org-sou.el"
  "org-sou.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  1723
  '(nil nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/org-config.el"
  "org-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  18
  '(341 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/mode-line-config.el"
  "mode-line-config.el"
  'emacs-lisp-mode
  '(abbrev-mode projectile-mode flx-ido-mode hs-minor-mode company-mode)
  103
  '(1 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/root/.emacs.d/set/misc-config.el"
  "misc-config.el"
  'emacs-lisp-mode
  '(projectile-mode flx-ido-mode hs-minor-mode company-mode)
  1211
  '(934 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/doc/todo.org"
  "todo.org"
  'org-mode
  '(abbrev-mode projectile-mode flx-ido-mode company-mode)
  27891
  '(50295 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/doc/php.org"
  "php.org"
  'org-mode
  '(auto-fill-mode abbrev-mode projectile-mode flx-ido-mode company-mode)
  693
  '(314 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/doc/tip.org"
  "tip.org"
  'org-mode
  '(abbrev-mode projectile-mode flx-ido-mode company-mode)
  55472
  '(55446 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix) (overwrite-mode)))

(desktop-create-buffer 206
  "/doc/z"
  "z"
  'text-mode
  '(auto-fill-mode abbrev-mode projectile-mode flx-ido-mode company-mode)
  995
  '(984 nil)
  nil
  nil
  '((buffer-file-coding-system . utf-8-unix)))

(desktop-create-buffer 206
  "/root/dl/3436219.txt"
  "3436219.txt"
  'text-mode
  '(auto-fill-mode projectile-mode flx-ido-mode)
  6
  '(1 t)
  nil
  nil
  '((buffer-file-coding-system . chinese-gbk-dos) (overwrite-mode)))

